
# English

👋🏼 Hi, I'm vlnk!


## ‍💼 Current roles

1.  **Web Services Consultant** at Numériphare

    I am providing my services for all kinds of developments around web technologies: I provide consultation as software architect, give fromation in order to develop your autonomy with your suite and I can lead the development of you web projects. **You can send me a request in order to schedule a consultation upon your web services**.

2.  **Product Owner** at [The Society for Arts and Technology](https://sat.qc.ca/)

    -   I am contributing to the future of [the telepresence scenic](https://gitlab.com/sat-mtl/tools/scenic/scenic) and [the haptic floor](https://gitlab.com/sat-mtl/tools/haptic-floor) at SAT.
    -   I use the **agility** principles in order to lead the release and the maintainance of our software ecosystem.
    -   I micro-managed the development tasks from [`Gitlab`](https://about.gitlab.com/).
    -   I help to architecture all software interactions.


## 📇 Keep in touch

You can reach me by mail:

-   **email**: allo[at]numeriphare[dot]com

Find me on the following platfoms:

-   [github](https://github.com/vlnk)
-   [gitlab](https://gitlab.com/vlnk)
-   [sourcehut](https://sr.ht/~vlnk/)
-   [linkedin](https://www.linkedin.com/in/valrnt/)


## 🤙🏻 About myself

I have studied in computer engineering because I find a great interest in development creativity and computing projects. I lead a small personal watch about new techniques of programming and software innovation. In addition of a fond fascination of the independent cinema and the electronic music, I contribute to a development team during my free time and I try to do my best for making music and video. As far as I have a good health (and I do all to maintain it), I am motivated, a little bit perfectionist and a very bad joker.


## 🏫 Diplomas

-   **Master's Degree in Computing** at the University of Québec in Chicoutimi (Canada)
-   **Ingénieur diplômé** at the Public Engineering School in Computer Science (France)


## ‍💻 Past experiences

1.  **Lead Front-End Developer** at [The Society for Arts and Technology](https://sat.qc.ca/)

    -   I developed *from scratch* the new version of the [Scenic](https://gitlab.com/sat-mtl/tools/scenic/scenic) interface that is contributing to [the telepresence ecosystem](https://telepresence-scenic.ca/).
    -   I contributed to its back-end called [`Switcher`](https://gitlab.com/sat-mtl/tools/switcher) and I developped library of [`UI Components`](https://gitlab.com/sat-mtl/tools/ui-components) for all the web Front-End developed at the SAT.
    -   I leaded the development team at the Valorisation department in order to provide the future of the telepresence tools.
    -   In addition, I was **Co-Director** in interim of the departement during few months.

2.  **Front-End Developer** at [Trisotech](https://www.trisotech.com/)

    -   I developped new features on the [**Digital Modeling Suite**](https://www.trisotech.com/digital-modeling-suite/) by developing some Front-End parts with [`jQuery`](https://jquery.com/)
    -   I also contributed to Back-End parts with **Java**.

3.  **Developer** at [Butor](http://www.butor.com)

    -   I documented all the open-sourced `Javascript` parts with [`JSDoc`](https://jsdoc.app/).
    -   I improved and analysed the `Java` back-end with my [UML](https://www.uml-diagrams.org/) knowledge.

4.  **Developer Intern** at [Infineon](https://www.infineon.com/)

    -   I experimented [MVVM patterns](https://learn.microsoft.com/en-us/xamarin/xamarin-forms/enterprise-application-patterns/mvvm) with a data viewer written in [C#](https://dotnet.microsoft.com/en-us/languages/csharp).


## 📈 Technology levels

I enumerate all tools I worked with in profesionnal contexts but as I am very curious in all kinds of technologies I am am very motivated to discover and master new tools. I have a strong capacity of **adaptation**.

1.  Expert

    -   🕸 [`Javascript`](https://www.javascript.com/), [`HTML`](https://html.spec.whatwg.org/multipage/) and [`CSS`](https://www.w3.org/Style/CSS/) languages including [`React`](https://reactjs.org/), [`NodeJS`](https://nodejs.org) and [`Webpack`](https://webpack.js.org/) frameworks.

2.  Mastering

    -   🐋 the [`Docker`](https://www.docker.com/) environment.
    -   🚀 the [`Gitlab`](https://about.gitlab.com/) platform.
    -   🐧 the [`Linux`](https://kernel.org/) operating system with the [`Bash`](https://www.gnu.org/software/bash/) scripting. I also use [`MacOS`](https://www.apple.com/ca/macos) systems.
    -   🐍 the [`Python`](https://www.python.org/) language in a lot of contexts: from back-end services to scripting projects.

3.  Intermediate

    -   🤖 [the `C` and `C++`](https://en.cppreference.com/w/) languages.
    -   ☄ [`Java`](https://www.java.com/en/) and [`C#`](https://dotnet.microsoft.com/en-us/) environments.

4.  Autodidact

    -   🐄 [`GNU Emacs`](https://www.gnu.org/software/emacs/), [`Visual Studio Code`](https://code.visualstudio.com/) and [`Android Studio`](https://developer.android.com/studio/) editors.
    -   🦀 the [`Rust`](https://www.rust-lang.org/) language.
    -   🌺 functionnal languages such as [`Closure Script`](https://clojurescript.org/) and [`Scheme`](http://www.call-cc.org/).
    -   🏗 the [`NixOS`](https://nixos.org/) operating system.

